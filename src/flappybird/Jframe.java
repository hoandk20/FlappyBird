/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package flappybird;

import java.awt.Color;
import java.awt.Panel;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;

import javax.swing.Timer;
import javax.swing.border.Border;

/**
 *
 * @author hoandk
 */
public class Jframe extends javax.swing.JFrame {

    /**
     * Creates new form Jframe
     */
    ArrayList<JButton> listPipe = new ArrayList<>();
    JButton bird = new JButton();

    public Jframe() {
        initComponents();
        addButton();
        addBird();
    }

    //main run functiona
    Timer t;

    void run() {
        Timer action = new Timer(200, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                setIcon();
            }
        });
        t = new Timer(10, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                for (JButton j : listPipe) {
                    int x = j.getX() - 1;
                    int y = j.getY();
                    j.setLocation(x, y);
                }
                addPipe();
                birdFall();
                birdFly();
                getPoint();
                if (checkTouch() == false) {
                    t.stop();
                }
            }
        });
        action.start();
        t.start();
    }

    //add bird to panel
    void addBird() {
        ImageIcon i = new ImageIcon("src/img/B1.png");
        bird.setIcon(i);
        bird.setBackground(Color.white);
        bird.setBounds(100, 150, 50, 50);
        jPanel1.add(bird);
    }

    int point = 0;
    double speed = 1;

    //get point
    void getPoint() {
        for (int i = 0; i < listPipe.size(); i++) {
            if (i % 2 == 0) {
                JButton j = listPipe.get(i);
                if (j.getX() == bird.getX()) {
                    point++;
                    txtPoint.setText("Point: " + point);
                }
            }
        }

    }

    //set bird fall down 
    void birdFall() {
        if (bird.getY() <= highY) {
            fly = false;
        }
        if (fly == false) {
            int y = bird.getY() + (int) speed;
            speed = speed + 0.1;
            bird.setLocation(bird.getX(), y);
        }
    }
    boolean icon = false;

    //set the animation of the bird 
    void setIcon() {
        if (icon == true) {
            ImageIcon i = new ImageIcon("src/img/B1.png");
            bird.setIcon(i);
            icon = false;
        } else {
            ImageIcon i = new ImageIcon("src/img/B2.png");
            bird.setIcon(i);
            icon = true;
        }
    }

    //check if the bird touch any a thing
    boolean checkTouch() {
        for (JButton j : listPipe) {
            Rectangle r = new Rectangle(j.getX(), j.getY(), j.getWidth(), j.getHeight());
            Rectangle b = new Rectangle(bird.getX(), bird.getY(), bird.getWidth(), bird.getHeight());
            if (r.intersects(b)) {
                return false;
            }
        }
        if (bird.getY() <= 0 || bird.getY() >= jPanel1.getHeight() - 50) {
            return false;
        }
        return true;
    }

    // add pipe to the panel
    void addPipe() {

        for (int i = 0; i < listPipe.size(); i++) {
            if (i % 2 == 0) {
                JButton j = listPipe.get(i);
                if (j.getX() == jPanel1.getWidth() - 150) {
                    addButton();
                }
            }
        }
    }

    void endOfPipe() {
        for (JButton j : listPipe) {
            int x = j.getX();
            if (x < -50) {
                listPipe.remove(j);
            }
        }
    }

    int gap = 150;

    void addButton() {
        ImageIcon pipe = new ImageIcon("src/img/Pipe.png");
        JButton p1 = new JButton(pipe);
        JButton p2 = new JButton(pipe);
        Random r = new Random();
        int h1 = r.nextInt(80) + 90;
        int h2 = jPanel1.getHeight() - h1 - gap;
        p1.setBounds(jPanel1.getWidth() + 50, 0, 60, h1 - 5);
        p2.setBounds(jPanel1.getWidth() + 50, jPanel1.getHeight() - h2, 60, h2 - 5);
        listPipe.add(p2);
        listPipe.add(p1);
        jPanel1.add(p1);
        jPanel1.add(p2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtPoint = new javax.swing.JLabel();
        btnStart = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setName(""); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 711, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 432, Short.MAX_VALUE)
        );

        txtPoint.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtPoint.setText("Point: 0");
        txtPoint.setToolTipText("");

        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnStart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtPoint)
                .addGap(80, 80, 80))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPoint)
                    .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 45, Short.MAX_VALUE))
        );

        txtPoint.getAccessibleContext().setAccessibleName("point");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    int highY;
    boolean fly = false;

    //
    void birdFly() {
        if (fly == true) {
            int y = bird.getY() - 3;
            bird.setLocation(bird.getX(), y);
        }
    }
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        highY = bird.getY() - 60;
        fly = true;
        speed = 1;
    }//GEN-LAST:event_formMouseClicked

    void reStart(){
        listPipe.clear();
        jPanel1.removeAll();
        addButton();
        addBird();
        speed=1;
        point=0;
        txtPoint.setText("Point: 0");
        t.start();
    }
    boolean start = false;
    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
      jPanel1.removeAll();
        if(start==false){
          run();
          start =true;
      }else{
          reStart();
      }
    }//GEN-LAST:event_btnStartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Jframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStart;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel txtPoint;
    // End of variables declaration//GEN-END:variables
}
